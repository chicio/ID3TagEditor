{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/id3tageditor\/examples"]}],"sections":[],"kind":"article","identifier":{"url":"doc:\/\/ID3TagEditor\/documentation\/ID3TagEditor\/Examples","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Let’s see how you can use "},{"type":"codeVoice","code":"ID3TagEditor"},{"type":"text","text":" to read and write ID3 tags."}],"hierarchy":{"paths":[["doc:\/\/ID3TagEditor\/documentation\/ID3TagEditor"]]},"metadata":{"title":"Examples","role":"article","roleHeading":"Article","modules":[{"name":"ID3TagEditor"}]},"primaryContentSections":[{"content":[{"level":4,"anchor":"Read","type":"heading","text":"Read"},{"type":"paragraph","inlineContent":[{"text":"To read the ID3 tag of an mp3 file you can choose between two API contained in the ","type":"text"},{"type":"reference","identifier":"doc:\/\/ID3TagEditor\/documentation\/ID3TagEditor\/ID3TagEditor","isActive":true},{"text":" class:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"reference","identifier":"doc:\/\/ID3TagEditor\/documentation\/ID3TagEditor\/ID3TagEditor\/read(from:)","isActive":true}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/ID3TagEditor\/documentation\/ID3TagEditor\/ID3TagEditor\/read(mp3:)"}]}]}]},{"type":"paragraph","inlineContent":[{"text":"After getting a ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ID3TagEditor\/documentation\/ID3TagEditor\/ID3Tag"},{"type":"text","text":" from one of the read API above, you have two options to read the content:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"if you’re interested in reading just the content of the frames, you can create an instance of "},{"type":"reference","identifier":"doc:\/\/ID3TagEditor\/documentation\/ID3TagEditor\/ID3TagContentReader","isActive":true},{"type":"text","text":" by passing to it the "},{"type":"reference","identifier":"doc:\/\/ID3TagEditor\/documentation\/ID3TagEditor\/ID3Tag","isActive":true},{"type":"text","text":" received from the read API and then access the frames content by using its methods."}]}]}]},{"type":"codeListing","syntax":"swift","code":["do {","    if let id3Tag = try id3TagEditor.read(from: PathLoader().pathFor(name: \"example\", fileType: \"mp3\")) {","        let tagContentReader = ID3TagContentReader(id3Tag: id3Tag)","        print(tagContentReader.title() ?? \"\")","        print(tagContentReader.artist() ?? \"\")","        \/\/ ...read other stuff...","    }","} catch  {","    print(error)","}  "]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"if you need full frames data, you can access to the "},{"identifier":"doc:\/\/ID3TagEditor\/documentation\/ID3TagEditor\/ID3Tag\/frames","isActive":true,"type":"reference"},{"text":" property.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"In this way you will have access to all the data contained in them, including their content and its features like the size and the ID3 frame identifier."}]}]}]},{"syntax":"swift","code":["do {","    let id3TagEditor = ID3TagEditor()","","    if let id3Tag = try id3TagEditor.read(from: \"<valid path to the mp3 file>\") {","        \/\/ ...use the tag...","        \/\/ For example to read the title, album and artist content you can do something similar","        print((id3Tag.frames[.title] as?  ID3FrameWithStringContent)?.content ?? \"\")","        print((id3Tag.frames[.artist] as? ID3FrameWithStringContent)?.content ?? \"\")","        print((id3Tag.frames[.album] as? ID3FrameWithStringContent)?.content ?? \"\")","    }","    ","    if let id3Tag = try id3TagEditor.read(mp3: \"<valid mp3 file passed as Data>\") {","        \/\/ ...use the tag...","        \/\/ For example to read the title, album and artist content you can do something similar","        print((id3Tag.frames[.title] as?  ID3FrameWithStringContent)?.content ?? \"\")","        print((id3Tag.frames[.artist] as? ID3FrameWithStringContent)?.content ?? \"\")","        print((id3Tag.frames[.album] as? ID3FrameWithStringContent)?.content ?? \"\")","    }    ","} catch {","    print(error)","}  "],"type":"codeListing"},{"level":4,"text":"Write","type":"heading","anchor":"Write"},{"type":"paragraph","inlineContent":[{"text":"To write a new ID3 tag into an mp3 file you can choose between two API contained in the ","type":"text"},{"identifier":"doc:\/\/ID3TagEditor\/documentation\/ID3TagEditor\/ID3TagEditor","type":"reference","isActive":true},{"type":"text","text":" class:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/ID3TagEditor\/documentation\/ID3TagEditor\/ID3TagEditor\/write(tag:mp3:)","type":"reference","isActive":true}]}]},{"content":[{"inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/ID3TagEditor\/documentation\/ID3TagEditor\/ID3TagEditor\/write(tag:to:andSaveTo:)"}],"type":"paragraph"}]}]},{"inlineContent":[{"text":"The only way to create a valid ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/ID3TagEditor\/documentation\/ID3TagEditor\/ID3Tag"},{"type":"text","text":" is by using of the tag builder available:"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/ID3TagEditor\/documentation\/ID3TagEditor\/ID32v2TagBuilder"},{"type":"text","text":", a builder useful to create ID3 tag version 2.2"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","identifier":"doc:\/\/ID3TagEditor\/documentation\/ID3TagEditor\/ID32v3TagBuilder","isActive":true},{"type":"text","text":", a builder useful to create ID3 tag version 2.3"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/ID3TagEditor\/documentation\/ID3TagEditor\/ID32v4TagBuilder"},{"type":"text","text":", a builder useful to create ID3 tag version 2.4"}]}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"text":"You can’t create an instance of ","type":"text"},{"identifier":"doc:\/\/ID3TagEditor\/documentation\/ID3TagEditor\/ID3Tag","isActive":true,"type":"reference"},{"text":"  without one of the builders above.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Below you can find a sample code that will write an ID3 tag version 3 with all the frames supported by "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ID3TagEditor\/documentation\/ID3TagEditor\/ID3TagEditor"},{"text":" to an mp3 file.","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["do {","    let id3Tag = ID32v3TagBuilder()","        .title(frame: ID3FrameWithStringContent(content: \"title V3\"))","        .album(frame: ID3FrameWithStringContent(content: \"album V3\"))","        .albumArtist(frame: ID3FrameWithStringContent(content: \"album artist V3\"))","        .artist(frame: ID3FrameWithStringContent(content: \"artist V3\"))","        .composer(frame: ID3FrameWithStringContent(content: \"composer V3\"))","        .conductor(frame: ID3FrameWithStringContent(content: \"conductor V3\"))","        .contentGrouping(frame: ID3FrameWithStringContent(content: \"ContentGrouping V3\"))","        .copyright(frame: ID3FrameWithStringContent(content: \"Copyright V3\"))","        .encodedBy(frame: ID3FrameWithStringContent(content: \"EncodedBy V3\"))","        .encoderSettings(frame: ID3FrameWithStringContent(content: \"EncoderSettings V3\"))","        .fileOwner(frame: ID3FrameWithStringContent(content: \"FileOwner V3\"))","        .lyricist(frame: ID3FrameWithStringContent(content: \"Lyricist V3\"))","        .mixArtist(frame: ID3FrameWithStringContent(content: \"MixArtist V3\"))","        .publisher(frame: ID3FrameWithStringContent(content: \"Publisher V3\"))","        .subtitle(frame: ID3FrameWithStringContent(content: \"Subtitle V3\"))","        .beatsPerMinute(frame: ID3FrameWithIntegerContent(value: 50))","        .originalFilename(frame: ID3FrameWithStringContent(content: \"filenameV3.mp3\"))","        .lengthInMilliseconds(frame: ID3FrameWithIntegerContent(value: 9000))","        .sizeInBytes(frame: ID3FrameWithIntegerContent(value: 1500))","        .genre(frame: ID3FrameGenre(genre: .metal, description: \"Metalcore\"))","        .discPosition(frame: ID3FramePartOfTotal(part: 1, total: 3))","        .trackPosition(frame: ID3FramePartOfTotal(part: 2, total: 9))","        .recordingDayMonth(frame: ID3FrameRecordingDayMonth(day: 5, month: 8))","        .recordingYear(frame: ID3FrameWithIntegerContent(year: 2020))","        .recordingHourMinute(frame: ID3FrameRecordingHourMinute(hour: 15, minute: 39))","        .attachedPicture(pictureType: .frontCover, frame: ID3FrameAttachedPicture(picture: <picture as Data object>, type: .frontCover, format: .jpeg))","        .attachedPicture(pictureType: .backCover, frame: ID3FrameAttachedPicture(picture: <picture as Data object>, type: .backCover, format: .jpeg))","        .unsynchronisedLyrics(language: .ita, frame: ID3FrameWithLocalizedContent(language: ID3FrameContentLanguage.ita, contentDescription: \"CD\", content: \"v3 ita unsync lyrics\"))","        .unsynchronisedLyrics(language: .eng, frame: ID3FrameWithLocalizedContent(language: ID3FrameContentLanguage.eng, contentDescription: \"CD\", content: \"v3 eng unsync lyrics\"))","        .iTunesGrouping(frame: ID3FrameWithStringContent(content: \"ItunesGrouping V3\"))","        .iTunesMovementName(frame: ID3FrameWithStringContent(content: \"MovementName V3\"))","        .iTunesMovementIndex(frame: ID3FrameWithIntegerContent(value: 6))","        .iTunesMovementCount(frame: ID3FrameWithIntegerContent(value: 13))","        .iTunesPodcastCategory(frame: ID3FrameWithStringContent(content: \"PodcastCategory V3\"))","        .iTunesPodcastDescription(frame: ID3FrameWithStringContent(content: \"PodcastDescription V3\"))","        .iTunesPodcastID(frame: ID3FrameWithStringContent(content: \"PodcastID V3\"))","        .iTunesPodcastKeywords(frame: ID3FrameWithStringContent(content: \"PodcastKeywords V3\"))","        .comment(language: .ita, frame: ID3FrameWithLocalizedContent(language: ID3FrameContentLanguage.ita, contentDescription: \"CD\", content: \"v2 ita comment\"))","        .comment(language: .eng, frame: ID3FrameWithLocalizedContent(language: ID3FrameContentLanguage.eng, contentDescription: \"CD\", content: \"v2 eng comment\"))","        .build()","    ","    try id3TagEditor.write(tag: id3Tag, to: \"<valid path to the mp3 file that will be overwritten>\")","    try id3TagEditor.write(tag: id3Tag, ","                           to: \"<valid path to the mp3 file>\",","                           andSaveTo: \"<new path where you want to save the mp3>\")","    let newMp3: Data = try id3TagEditor.write(tag: id3Tag, mp3: <valid mp3 file passed as Data>)                          ","} catch {","    print(error)","}    "]},{"type":"paragraph","inlineContent":[{"text":"You can also find more usage example in the ","type":"text"},{"identifier":"https:\/\/github.com\/chicio\/ID3TagEditor\/blob\/main\/Tests\/Acceptance\/ID3TagEditorWriteReadAcceptanceTest.swift","type":"reference","isActive":true},{"text":" included in the project.","type":"text"}]}],"kind":"content"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://ID3TagEditor/documentation/ID3TagEditor/ID32v4TagBuilder":{"url":"\/documentation\/id3tageditor\/id32v4tagbuilder","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Builder used to create a ID32v4 tag."},{"type":"text","text":" "},{"type":"text","text":"It let the user set all the frames included in ID32TagCommonStringFramesBuilder, ID32TagCommonCompositeFramesBuilder,"},{"text":" ","type":"text"},{"type":"text","text":"RecordingDateTimeFrameBuilder, FileOwnerFrameBuilder and ITunesFramesBuilder."}],"navigatorTitle":[{"text":"ID32v4TagBuilder","kind":"identifier"}],"identifier":"doc:\/\/ID3TagEditor\/documentation\/ID3TagEditor\/ID32v4TagBuilder","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ID32v4TagBuilder"}],"title":"ID32v4TagBuilder"},"doc://ID3TagEditor/documentation/ID3TagEditor/ID3Tag":{"identifier":"doc:\/\/ID3TagEditor\/documentation\/ID3TagEditor\/ID3Tag","title":"ID3Tag","abstract":[{"type":"text","text":"A class used to represent an ID3 tag."}],"role":"symbol","type":"topic","url":"\/documentation\/id3tageditor\/id3tag","navigatorTitle":[{"text":"ID3Tag","kind":"identifier"}],"kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ID3Tag","kind":"identifier"}]},"doc://ID3TagEditor/documentation/ID3TagEditor/ID3TagEditor/write(tag:mp3:)":{"kind":"symbol","title":"write(tag:mp3:)","abstract":[{"type":"text","text":"Write the ID3 tag passed as parameter to the mp3 file passed as "},{"code":"Data","type":"codeVoice"},{"type":"text","text":"."}],"url":"\/documentation\/id3tageditor\/id3tageditor\/write(tag:mp3:)","identifier":"doc:\/\/ID3TagEditor\/documentation\/ID3TagEditor\/ID3TagEditor\/write(tag:mp3:)","role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"write"},{"kind":"text","text":"("},{"kind":"externalParam","text":"tag"},{"text":": ","kind":"text"},{"text":"ID3Tag","kind":"typeIdentifier","preciseIdentifier":"s:12ID3TagEditor0aB0C"},{"kind":"text","text":", "},{"text":"mp3","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Data","preciseIdentifier":"s:10Foundation4DataV"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DataV","text":"Data"}]},"doc://ID3TagEditor/documentation/ID3TagEditor/ID3TagEditor":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ID3TagEditor"}],"navigatorTitle":[{"kind":"identifier","text":"ID3TagEditor"}],"abstract":[{"text":"A class to edit the ID3 tag of an mp3 file.","type":"text"}],"type":"topic","title":"ID3TagEditor","identifier":"doc:\/\/ID3TagEditor\/documentation\/ID3TagEditor\/ID3TagEditor","url":"\/documentation\/id3tageditor\/id3tageditor","role":"symbol","kind":"symbol"},"doc://ID3TagEditor/documentation/ID3TagEditor/ID3TagContentReader":{"navigatorTitle":[{"text":"ID3TagContentReader","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ID3TagContentReader","kind":"identifier"}],"abstract":[{"type":"text","text":"Class that “makes your life easier” when it comes to read data from the ID3 tag."},{"text":" ","type":"text"},{"type":"text","text":"Create an instance of this class by passing to it a "},{"code":"ID3Tag","type":"codeVoice"},{"type":"text","text":" instance"},{"text":" ","type":"text"},{"text":"(obtained from the read methods of ","type":"text"},{"code":"ID3TagEditor","type":"codeVoice"},{"type":"text","text":")."},{"type":"text","text":" "},{"type":"text","text":"In this way you will now have access to all the data contained in the ID3 tag by using the methods of this class."}],"url":"\/documentation\/id3tageditor\/id3tagcontentreader","identifier":"doc:\/\/ID3TagEditor\/documentation\/ID3TagEditor\/ID3TagContentReader","title":"ID3TagContentReader","role":"symbol","kind":"symbol","type":"topic"},"doc://ID3TagEditor/documentation/ID3TagEditor/ID32v2TagBuilder":{"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Builder used to create a ID32v2 tag."},{"type":"text","text":" "},{"type":"text","text":"It let the user set all the frames included in ID32TagCommonStringFramesBuilder,"},{"text":" ","type":"text"},{"text":"ID32TagCommonCompositeFramesBuilder and RecordingHourMinuteDayMonthYearFramesBuilder.","type":"text"}],"url":"\/documentation\/id3tageditor\/id32v2tagbuilder","identifier":"doc:\/\/ID3TagEditor\/documentation\/ID3TagEditor\/ID32v2TagBuilder","role":"symbol","title":"ID32v2TagBuilder","navigatorTitle":[{"text":"ID32v2TagBuilder","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ID32v2TagBuilder","kind":"identifier"}]},"doc://ID3TagEditor/documentation/ID3TagEditor/ID3TagEditor/write(tag:to:andSaveTo:)":{"abstract":[{"type":"text","text":"Writes the mp3 to a new file or overwrite it with the new ID3 tag."}],"kind":"symbol","identifier":"doc:\/\/ID3TagEditor\/documentation\/ID3TagEditor\/ID3TagEditor\/write(tag:to:andSaveTo:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"write"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"tag"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:12ID3TagEditor0aB0C","text":"ID3Tag","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"andSaveTo","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":"?) "},{"text":"throws","kind":"keyword"}],"title":"write(tag:to:andSaveTo:)","url":"\/documentation\/id3tageditor\/id3tageditor\/write(tag:to:andsaveto:)","type":"topic","role":"symbol"},"doc://ID3TagEditor/documentation/ID3TagEditor/ID3TagEditor/read(from:)":{"identifier":"doc:\/\/ID3TagEditor\/documentation\/ID3TagEditor\/ID3TagEditor\/read(from:)","url":"\/documentation\/id3tageditor\/id3tageditor\/read(from:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"read","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:12ID3TagEditor0aB0C","kind":"typeIdentifier","text":"ID3Tag"},{"kind":"text","text":"?"}],"kind":"symbol","title":"read(from:)","abstract":[{"type":"text","text":"Read the ID3 tag contained in the mp3 file."}],"role":"symbol","type":"topic"},"https://github.com/chicio/ID3TagEditor/blob/main/Tests/Acceptance/ID3TagEditorWriteReadAcceptanceTest.swift":{"identifier":"https:\/\/github.com\/chicio\/ID3TagEditor\/blob\/main\/Tests\/Acceptance\/ID3TagEditorWriteReadAcceptanceTest.swift","type":"link","titleInlineContent":[{"type":"text","text":"read\/write acceptance test"}],"url":"https:\/\/github.com\/chicio\/ID3TagEditor\/blob\/main\/Tests\/Acceptance\/ID3TagEditorWriteReadAcceptanceTest.swift","title":"read\/write acceptance test"},"doc://ID3TagEditor/documentation/ID3TagEditor":{"title":"ID3TagEditor","url":"\/documentation\/id3tageditor","identifier":"doc:\/\/ID3TagEditor\/documentation\/ID3TagEditor","abstract":[{"text":"A swift library to read and modify ID3 Tag of any mp3 file. Listed in the implementations section of the official ID3 standard website id3.org.","type":"text"}],"type":"topic","kind":"symbol","role":"collection"},"doc://ID3TagEditor/documentation/ID3TagEditor/ID3Tag/frames":{"abstract":[{"text":"Dictionary that contains the frames extracted or to be added to the id3 tag for an mp3 file.","type":"text"}],"identifier":"doc:\/\/ID3TagEditor\/documentation\/ID3TagEditor\/ID3Tag\/frames","type":"topic","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"frames","kind":"identifier"},{"text":": [","kind":"text"},{"text":"FrameName","kind":"typeIdentifier","preciseIdentifier":"s:12ID3TagEditor9FrameNameO"},{"kind":"text","text":" : "},{"text":"ID3Frame","kind":"typeIdentifier","preciseIdentifier":"s:12ID3TagEditor0A5FrameC"},{"text":"]","kind":"text"}],"url":"\/documentation\/id3tageditor\/id3tag\/frames","kind":"symbol","title":"frames"},"doc://ID3TagEditor/documentation/ID3TagEditor/ID32v3TagBuilder":{"type":"topic","identifier":"doc:\/\/ID3TagEditor\/documentation\/ID3TagEditor\/ID32v3TagBuilder","url":"\/documentation\/id3tageditor\/id32v3tagbuilder","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ID32v3TagBuilder","kind":"identifier"}],"title":"ID32v3TagBuilder","abstract":[{"type":"text","text":"Builder used to create a ID32v3 tag."},{"text":" ","type":"text"},{"type":"text","text":"It let the user set all the frames included in ID32TagCommonStringFramesBuilder, ID32TagCommonCompositeFramesBuilder,"},{"type":"text","text":" "},{"type":"text","text":"RecordingHourMinuteDayMonthYearFramesBuilder, FileOwnerFrameBuilder and ITunesFramesBuilder."}],"navigatorTitle":[{"text":"ID32v3TagBuilder","kind":"identifier"}],"role":"symbol","kind":"symbol"},"doc://ID3TagEditor/documentation/ID3TagEditor/ID3TagEditor/read(mp3:)":{"role":"symbol","abstract":[{"text":"Read the ID3 tag contained in the mp3 file passed as ","type":"text"},{"type":"codeVoice","code":"Data"},{"type":"text","text":"."}],"identifier":"doc:\/\/ID3TagEditor\/documentation\/ID3TagEditor\/ID3TagEditor\/read(mp3:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"read"},{"text":"(","kind":"text"},{"text":"mp3","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Data","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DataV"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"ID3Tag","kind":"typeIdentifier","preciseIdentifier":"s:12ID3TagEditor0aB0C"},{"kind":"text","text":"?"}],"kind":"symbol","title":"read(mp3:)","type":"topic","url":"\/documentation\/id3tageditor\/id3tageditor\/read(mp3:)"}}}